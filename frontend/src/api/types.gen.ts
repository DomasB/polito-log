// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * StatementCreate
 *
 * Schema for creating a new statement.
 */
export type StatementCreate = {
    /**
     * Politician Name
     *
     * Name of the politician
     */
    politician_name: string;
    /**
     * Party
     *
     * Political party
     */
    party: string;
    /**
     * Statement Text
     *
     * The actual statement text
     */
    statement_text: string;
    /**
     * Source Url
     *
     * URL source of the statement
     */
    source_url?: string | null;
    /**
     * Statement Date
     *
     * Date when the statement was made
     */
    statement_date: string;
    /**
     * Category
     *
     * Category of the statement
     */
    category?: string | null;
    /**
     * Verification status
     */
    status?: StatementStatus;
};

/**
 * StatementResponse
 *
 * Schema for statement API responses.
 */
export type StatementResponse = {
    /**
     * Politician Name
     *
     * Name of the politician
     */
    politician_name: string;
    /**
     * Party
     *
     * Political party
     */
    party: string;
    /**
     * Statement Text
     *
     * The actual statement text
     */
    statement_text: string;
    /**
     * Source Url
     *
     * URL source of the statement
     */
    source_url?: string | null;
    /**
     * Statement Date
     *
     * Date when the statement was made
     */
    statement_date: string;
    /**
     * Category
     *
     * Category of the statement
     */
    category?: string | null;
    /**
     * Verification status
     */
    status?: StatementStatus;
    /**
     * Id
     */
    id: number;
    /**
     * Is Active
     */
    is_active: boolean;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * StatementStatus
 *
 * Enum for statement verification status.
 */
export type StatementStatus = 'pending' | 'verified' | 'disputed' | 'retracted';

/**
 * StatementUpdate
 *
 * Schema for updating an existing statement. All fields are optional.
 */
export type StatementUpdate = {
    /**
     * Politician Name
     */
    politician_name?: string | null;
    /**
     * Party
     */
    party?: string | null;
    /**
     * Statement Text
     */
    statement_text?: string | null;
    /**
     * Source Url
     */
    source_url?: string | null;
    /**
     * Statement Date
     */
    statement_date?: string | null;
    /**
     * Category
     */
    category?: string | null;
    status?: StatementStatus | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetStatementsApiV1StatementsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         *
         * Number of records to skip
         */
        skip?: number;
        /**
         * Limit
         *
         * Maximum number of records to return
         */
        limit?: number;
        /**
         * Active Only
         *
         * Return only active statements
         */
        active_only?: boolean;
    };
    url: '/api/v1/statements/';
};

export type GetStatementsApiV1StatementsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatementsApiV1StatementsGetError = GetStatementsApiV1StatementsGetErrors[keyof GetStatementsApiV1StatementsGetErrors];

export type GetStatementsApiV1StatementsGetResponses = {
    /**
     * Response Get Statements Api V1 Statements  Get
     *
     * Successful Response
     */
    200: Array<StatementResponse>;
};

export type GetStatementsApiV1StatementsGetResponse = GetStatementsApiV1StatementsGetResponses[keyof GetStatementsApiV1StatementsGetResponses];

export type CreateStatementApiV1StatementsPostData = {
    body: StatementCreate;
    path?: never;
    query?: never;
    url: '/api/v1/statements/';
};

export type CreateStatementApiV1StatementsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateStatementApiV1StatementsPostError = CreateStatementApiV1StatementsPostErrors[keyof CreateStatementApiV1StatementsPostErrors];

export type CreateStatementApiV1StatementsPostResponses = {
    /**
     * Successful Response
     */
    201: StatementResponse;
};

export type CreateStatementApiV1StatementsPostResponse = CreateStatementApiV1StatementsPostResponses[keyof CreateStatementApiV1StatementsPostResponses];

export type DeleteStatementApiV1StatementsStatementIdDeleteData = {
    body?: never;
    path: {
        /**
         * Statement Id
         */
        statement_id: number;
    };
    query?: {
        /**
         * Soft Delete
         *
         * If True, perform soft delete
         */
        soft_delete?: boolean;
    };
    url: '/api/v1/statements/{statement_id}';
};

export type DeleteStatementApiV1StatementsStatementIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteStatementApiV1StatementsStatementIdDeleteError = DeleteStatementApiV1StatementsStatementIdDeleteErrors[keyof DeleteStatementApiV1StatementsStatementIdDeleteErrors];

export type DeleteStatementApiV1StatementsStatementIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteStatementApiV1StatementsStatementIdDeleteResponse = DeleteStatementApiV1StatementsStatementIdDeleteResponses[keyof DeleteStatementApiV1StatementsStatementIdDeleteResponses];

export type GetStatementApiV1StatementsStatementIdGetData = {
    body?: never;
    path: {
        /**
         * Statement Id
         */
        statement_id: number;
    };
    query?: never;
    url: '/api/v1/statements/{statement_id}';
};

export type GetStatementApiV1StatementsStatementIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatementApiV1StatementsStatementIdGetError = GetStatementApiV1StatementsStatementIdGetErrors[keyof GetStatementApiV1StatementsStatementIdGetErrors];

export type GetStatementApiV1StatementsStatementIdGetResponses = {
    /**
     * Successful Response
     */
    200: StatementResponse;
};

export type GetStatementApiV1StatementsStatementIdGetResponse = GetStatementApiV1StatementsStatementIdGetResponses[keyof GetStatementApiV1StatementsStatementIdGetResponses];

export type UpdateStatementApiV1StatementsStatementIdPutData = {
    body: StatementUpdate;
    path: {
        /**
         * Statement Id
         */
        statement_id: number;
    };
    query?: never;
    url: '/api/v1/statements/{statement_id}';
};

export type UpdateStatementApiV1StatementsStatementIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateStatementApiV1StatementsStatementIdPutError = UpdateStatementApiV1StatementsStatementIdPutErrors[keyof UpdateStatementApiV1StatementsStatementIdPutErrors];

export type UpdateStatementApiV1StatementsStatementIdPutResponses = {
    /**
     * Successful Response
     */
    200: StatementResponse;
};

export type UpdateStatementApiV1StatementsStatementIdPutResponse = UpdateStatementApiV1StatementsStatementIdPutResponses[keyof UpdateStatementApiV1StatementsStatementIdPutResponses];

export type GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetData = {
    body?: never;
    path: {
        /**
         * Politician Name
         */
        politician_name: string;
    };
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/statements/politician/{politician_name}';
};

export type GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetError = GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetErrors[keyof GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetErrors];

export type GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetResponses = {
    /**
     * Response Get Statements By Politician Api V1 Statements Politician  Politician Name  Get
     *
     * Successful Response
     */
    200: Array<StatementResponse>;
};

export type GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetResponse = GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetResponses[keyof GetStatementsByPoliticianApiV1StatementsPoliticianPoliticianNameGetResponses];

export type GetStatementsByPartyApiV1StatementsPartyPartyGetData = {
    body?: never;
    path: {
        /**
         * Party
         */
        party: string;
    };
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/statements/party/{party}';
};

export type GetStatementsByPartyApiV1StatementsPartyPartyGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatementsByPartyApiV1StatementsPartyPartyGetError = GetStatementsByPartyApiV1StatementsPartyPartyGetErrors[keyof GetStatementsByPartyApiV1StatementsPartyPartyGetErrors];

export type GetStatementsByPartyApiV1StatementsPartyPartyGetResponses = {
    /**
     * Response Get Statements By Party Api V1 Statements Party  Party  Get
     *
     * Successful Response
     */
    200: Array<StatementResponse>;
};

export type GetStatementsByPartyApiV1StatementsPartyPartyGetResponse = GetStatementsByPartyApiV1StatementsPartyPartyGetResponses[keyof GetStatementsByPartyApiV1StatementsPartyPartyGetResponses];

export type GetStatementsByStatusApiV1StatementsStatusStatusGetData = {
    body?: never;
    path: {
        status: StatementStatus;
    };
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/statements/status/{status}';
};

export type GetStatementsByStatusApiV1StatementsStatusStatusGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatementsByStatusApiV1StatementsStatusStatusGetError = GetStatementsByStatusApiV1StatementsStatusStatusGetErrors[keyof GetStatementsByStatusApiV1StatementsStatusStatusGetErrors];

export type GetStatementsByStatusApiV1StatementsStatusStatusGetResponses = {
    /**
     * Response Get Statements By Status Api V1 Statements Status  Status  Get
     *
     * Successful Response
     */
    200: Array<StatementResponse>;
};

export type GetStatementsByStatusApiV1StatementsStatusStatusGetResponse = GetStatementsByStatusApiV1StatementsStatusStatusGetResponses[keyof GetStatementsByStatusApiV1StatementsStatusStatusGetResponses];

export type SearchStatementsApiV1StatementsSearchGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Q
         *
         * Search query
         */
        q: string;
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/statements/search/';
};

export type SearchStatementsApiV1StatementsSearchGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SearchStatementsApiV1StatementsSearchGetError = SearchStatementsApiV1StatementsSearchGetErrors[keyof SearchStatementsApiV1StatementsSearchGetErrors];

export type SearchStatementsApiV1StatementsSearchGetResponses = {
    /**
     * Response Search Statements Api V1 Statements Search  Get
     *
     * Successful Response
     */
    200: Array<StatementResponse>;
};

export type SearchStatementsApiV1StatementsSearchGetResponse = SearchStatementsApiV1StatementsSearchGetResponses[keyof SearchStatementsApiV1StatementsSearchGetResponses];

export type HealthCheckGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type HealthCheckGetResponses = {
    /**
     * Response Health Check  Get
     *
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type HealthCheckGetResponse = HealthCheckGetResponses[keyof HealthCheckGetResponses];

export type ApiHealthCheckApiV1GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type ApiHealthCheckApiV1GetResponses = {
    /**
     * Response Api Health Check Api V1  Get
     *
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type ApiHealthCheckApiV1GetResponse = ApiHealthCheckApiV1GetResponses[keyof ApiHealthCheckApiV1GetResponses];

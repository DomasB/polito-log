services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: polito-log-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: polito_user
      POSTGRES_PASSWORD: polito_password
      POSTGRES_DB: polito_log
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U polito_user -d polito_log"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: development
    container_name: polito-log-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://polito_user:polito_password@db:5432/polito_log
      ENVIRONMENT: development
      DEBUG: "True"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Mount source code for development (hot reload)
      - ./app:/app/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: polito-log-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@polito-log.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    name: polito-log-network
